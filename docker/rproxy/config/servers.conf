server {
  #listen 443 ssl;
  listen 8080;
  server_name MACHINE_DOMAIN;
  
  #ssl_certificate /etc/letsencrypt/live/MACHINE_DOMAIN/fullchain.pem;
  #ssl_certificate_key /etc/letsencrypt/live/MACHINE_DOMAIN/privkey.pem;
  #ssl_trusted_certificate /etc/letsencrypt/live/MACHINE_DOMAIN/chain.pem;
  
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  
  proxy_connect_timeout 240;
  proxy_send_timeout 600;
  proxy_read_timeout 600;
  send_timeout 600;

  location / {
    proxy_pass http://kendo-tournament-frontend:4200/;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  
  location /kendo-tournament-frontend {
    return 302 /kendo-tournament-frontend/;
  }
  
  location /kendo-tournament-frontend/ {
    proxy_pass http://kendo-tournament-frontend:4200/;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  
  location /kendo-tournament-backend {
    return 302 /kendo-tournament-backend/;
  }
  
  location /kendo-tournament-backend/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://kendo-tournament-backend:8080/kendo-tournament-backend/;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

}

server {
   listen       80;
   listen [::]:80;
   server_name MACHINE_DOMAIN;

   # Enable this if you are using certbot as a docker container.
   #location ^~ /.well-known {
   #    allow all;
   #    root  /data/letsencrypt/;
   #}

   # Configure http to redirect to https when certificates are ready (and creating certificates as docker container);
  location / {
     return 301 https://$host$request_uri;
   }
   
  location = /health {
    access_log off;
    add_header 'Content-Type' 'application/json';
    return 200 '{"status":"healthy"}';
  }
}